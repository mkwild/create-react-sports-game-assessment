{"version":3,"sources":["assets/audio/score.wav","assets/audio/miss.wav","assets/images/logo1.png","assets/images/logo2.jfif","assets/images/logo3.jfif","assets/images/logo4.png","components/team/Team.js","components/scoreboard/Scoreboard.js","components/game/Game.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Team","props","className","src","logo","alt","name","height","width","stats","shots","style","visibility","hasShot","Math","round","score","onClick","shotHandler","ScoreBoard","id","homeTeamStats","visitingTeamStats","Game","team","teamStatsKey","state","random","scoreAudio","play","missAudio","setState","resetHandler","event","HomeTeamStats","VisitingTeamStats","resetCount","venue","homeTeam","homeTeamLogo","visitingTeam","visitingTeamLogo","Audio","ScoreAudio","MissAudio","this","React","Component","App","homeTeamLogo1","visitingTeamLogo1","homeTeamLogo2","visitingTeamLogo2","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4644994c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/score.1c5e2a77.wav\";","module.exports = __webpack_public_path__ + \"static/media/miss.ec73a758.wav\";","module.exports = __webpack_public_path__ + \"static/media/logo1.a26d4543.png\";","module.exports = __webpack_public_path__ + \"static/media/logo2.2594219c.jfif\";","module.exports = __webpack_public_path__ + \"static/media/logo3.3776dfaf.jfif\";","module.exports = __webpack_public_path__ + \"static/media/logo4.6c66ad1a.png\";","import React from 'react'\r\n\r\nfunction Team (props) {\r\n\r\n    return(\r\n        <div className=\"team\">\r\n            <img src={props.logo} alt={props.name} height=\"100px\" width=\"100px\" />\r\n            <h2>{props.name}</h2>\r\n            <br />\r\n            <p>Shots Taken: {props.stats.shots}</p>\r\n            <p style={{visibility: props.stats.hasShot ? \"visible\" : \"hidden\"}}>Shot Percentage: %{Math.round((props.stats.score / props.stats.shots)*100)}</p>\r\n            <br />\r\n            <p>Score: {props.stats.score}</p>\r\n            <br />\r\n            <button onClick={props.shotHandler}>Shoot</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Team","import React from 'react'\r\n\r\nfunction ScoreBoard(props) {\r\n                                \r\n    return (\r\n        <div id=\"scoreboard\">\r\n            <div>Scoreboard</div>\r\n            <div id=\"teamScores\">\r\n                <div id=\"homeScore\">\r\n                    <div>Home</div>\r\n                    <div>{props.homeTeamStats.score}</div>\r\n                </div>\r\n                <div id=\"visitingScore\">\r\n                    <div>Visitors</div>\r\n                    <div>{props.visitingTeamStats.score}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ScoreBoard","import React from \"react\";\r\nimport Team from \"../team/Team\";\r\nimport ScoreBoard from \"../scoreboard/Scoreboard\";\r\nimport ScoreAudio from \"../../assets/audio/score.wav\";\r\nimport MissAudio from \"../../assets/audio/miss.wav\";\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      venue: props.venue,\r\n      homeTeam: props.homeTeam,\r\n      homeTeamLogo: props.homeTeamLogo,\r\n      visitingTeam: props.visitingTeam,\r\n      visitingTeamLogo: props.visitingTeamLogo,\r\n      HomeTeamStats: {\r\n        shots: 0,\r\n        score: 0,\r\n        hasShot: false,\r\n      },\r\n      VisitingTeamStats: {\r\n        shots: 0,\r\n        score: 0,\r\n        hasShot: false,\r\n      },\r\n      resetCount: 0,\r\n    };\r\n\r\n    this.scoreAudio = new Audio(ScoreAudio);\r\n    this.missAudio = new Audio(MissAudio);\r\n  }\r\n\r\n  shotHandler = (team) => {\r\n    const teamStatsKey = `${team}TeamStats`;\r\n    let score = this.state[teamStatsKey].score;\r\n    if (Math.random() >= 0.5) {\r\n      score++;\r\n      this.scoreAudio.play();\r\n    } else {\r\n      this.missAudio.play();\r\n    }\r\n    this.setState((state, props) => ({\r\n      [teamStatsKey]: {\r\n        shots: state[teamStatsKey].shots + 1,\r\n        score,\r\n        hasShot: true,\r\n      },\r\n    }));\r\n  };\r\n\r\n  resetHandler = (event) => {\r\n    this.setState((state, props) => ({\r\n      HomeTeamStats: {\r\n        shots: 0,\r\n        score: 0,\r\n        hasShot: false,\r\n      },\r\n      VisitingTeamStats: {\r\n        shots: 0,\r\n        score: 0,\r\n        hasShot: false,\r\n      },\r\n      resetCount: state.resetCount + 1,\r\n    }));\r\n  };\r\n\r\n  render(props) {\r\n    return (\r\n      <div id=\"game\">\r\n        <h1>Welcome to {this.state.venue}!</h1>\r\n        <div id=\"main\">\r\n          <div id=\"team1\">\r\n            <Team\r\n              name={this.state.homeTeam}\r\n              logo={this.state.homeTeamLogo}\r\n              stats={this.state.HomeTeamStats}\r\n              shotHandler={() => this.shotHandler(\"Home\")}\r\n            />\r\n          </div>\r\n          <div id=\"versus\">\r\n            <h3>VS</h3>\r\n            <div>\r\n              <strong>Resets:</strong> {this.state.resetCount}\r\n            </div>\r\n            <button onClick={this.resetHandler}>Reset</button>\r\n            <ScoreBoard\r\n              homeTeamStats={this.state.HomeTeamStats}\r\n              visitingTeamStats={this.state.VisitingTeamStats}\r\n            />\r\n          </div>\r\n          <div id=\"team2\">\r\n            <Team\r\n              name={this.state.visitingTeam}\r\n              logo={this.state.visitingTeamLogo}\r\n              stats={this.state.VisitingTeamStats}\r\n              shotHandler={() => this.shotHandler(\"Visiting\")}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div id=\"empty\"></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Game from './components/game/Game'\r\nimport homeTeamLogo1 from './assets/images/logo1.png'\r\nimport visitingTeamLogo1 from './assets/images/logo2.jfif'\r\nimport homeTeamLogo2 from './assets/images/logo3.jfif'\r\nimport visitingTeamLogo2 from './assets/images/logo4.png'\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Game\r\n        venue=\"The Moon\"\r\n        homeTeam=\"Bearcats\"\r\n          homeTeamLogo={homeTeamLogo1}\r\n          visitingTeam=\"Dragons\"\r\n          visitingTeamLogo={visitingTeamLogo1}\r\n      />\r\n      <Game\r\n        venue=\"Antarctica\"\r\n        homeTeam=\"The Kinguins\"\r\n        homeTeamLogo={homeTeamLogo2}\r\n        visitingTeam=\"The Sea Lions\"\r\n        visitingTeamLogo={visitingTeamLogo2}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}